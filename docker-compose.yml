version: "3.9"
services:
    frontend:
        build:
            context: ./frontend  
        restart: on-failure:3
        ports:
            - "3000:3000"
        networks:
            - my_network

    backend:
        build: 
            context: ./backend
        restart: on-failure:3
        ports:
            - "8000:8000"
        volumes:
            - ./backend:/app
        depends_on:
            - postgres
        environment:
            DATABASE_URL: postgresql://my_user:my_password@postgres:5432/my_db
            SECRET_KEY: uFTuxjpGQxU8EsfcVPcTJfzqwG1CrjWk
            JWT_SECRET_KEY: wq2d6379Xb7U3dwPkb2Wy2NcpZesc6N1
        networks:
            - my_network

    postgres:
        image: postgres:13
        restart: always
        environment:
            POSTGRES_DB: my_db
            POSTGRES_USER: my_user
            POSTGRES_PASSWORD: my_password
        ports:
            - '5432:5432'
        networks:
            - my_network
    
    nginx:
        image: nginx
        ports:
            - "8443:8443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/certificates:/etc/nginx/certificates
        restart: always
        depends_on:
            - frontend
            - backend
        networks:
            - my_network
            
networks:
    my_network: