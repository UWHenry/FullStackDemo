worker_processes auto;

events {
    worker_connections 1024;
}

http {
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    server {
        listen 8443 ssl;
        server_name localhost;

        ssl_certificate ./certificates/certificate.crt;
        ssl_certificate_key ./certificates/private.key;

        # location /api/swagger/ {
        #     rewrite ^/api/swagger/(.*)$ /$1 break;
        #     proxy_pass http://backend:8000/;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header X-Forwarded-Host $http_host;
        #     alias http://backend:8000/swaggerui/;
        #     index index.html;
        # }


        # Flask backend configuration
        location /api/ {
            include proxy_params;
            proxy_pass http://backend:8000/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Prefix /;

            # Add CORS headers to allow cross-origin requests with credentials
            add_header 'Access-Control-Allow-Origin' 'https://localhost:8443';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Credentials' 'true';
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # React frontend configuration
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }
    }
}
